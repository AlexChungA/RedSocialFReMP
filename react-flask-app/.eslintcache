[{"C:\\Users\\ALEX CHUNG\\Desktop\\IHC\\Red Social Ayuda Emocional\\react-flask-app\\src\\index.js":"1","C:\\Users\\ALEX CHUNG\\Desktop\\IHC\\Red Social Ayuda Emocional\\react-flask-app\\src\\App.js":"2","C:\\Users\\ALEX CHUNG\\Desktop\\IHC\\Red Social Ayuda Emocional\\react-flask-app\\src\\reportWebVitals.js":"3","C:\\Users\\ALEX CHUNG\\Desktop\\IHC\\Red Social Ayuda Emocional\\react-flask-app\\src\\components\\login.component.js":"4","C:\\Users\\ALEX CHUNG\\Desktop\\IHC\\Red Social Ayuda Emocional\\react-flask-app\\src\\components\\signup.component.js":"5","C:\\Users\\ALEX CHUNG\\Desktop\\IHC\\Red Social Ayuda Emocional\\react-flask-app\\src\\components\\recover_password.component.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":794,"mtime":1608595452182,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":2494,"mtime":1608592875167,"results":"11","hashOfConfig":"8"},{"size":3465,"mtime":1608591909680,"results":"12","hashOfConfig":"8"},{"size":1618,"mtime":1608591660370,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1yo9yek",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"16"},"C:\\Users\\ALEX CHUNG\\Desktop\\IHC\\Red Social Ayuda Emocional\\react-flask-app\\src\\index.js",[],["30","31"],"C:\\Users\\ALEX CHUNG\\Desktop\\IHC\\Red Social Ayuda Emocional\\react-flask-app\\src\\App.js",["32"],"C:\\Users\\ALEX CHUNG\\Desktop\\IHC\\Red Social Ayuda Emocional\\react-flask-app\\src\\reportWebVitals.js",[],"C:\\Users\\ALEX CHUNG\\Desktop\\IHC\\Red Social Ayuda Emocional\\react-flask-app\\src\\components\\login.component.js",["33"],"import React, { Component } from \"react\";\r\nimport { AvForm, AvGroup, AvInput, AvFeedback } from 'availity-reactstrap-validation';\r\n\r\nexport default class Login extends Component {\r\n    constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\"\r\n    };\r\n\r\n  }\r\n\r\n  handleInputChange = event => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n  \r\n  handleSubmit = async event => {\r\n    event.preventDefault();\r\n    const user = {email:this.state.email, password:this.state.password};\r\n    const response = await fetch(\"/\",{\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n  }\r\n  \r\n  render() {\r\n        return (\r\n          <AvForm onValidSubmit={this.handleSubmit}>\r\n                <h3>Iniciar Sesión</h3>\r\n               <AvGroup>\r\n                    <AvInput type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleInputChange} className=\"form-control\" placeholder=\"Correo electrónico\" required/>\r\n                    <AvFeedback>Se necesita ingresar una dirección de correo válida para iniciar sesión.</AvFeedback>\r\n                </AvGroup>\r\n\r\n                <AvGroup>\r\n                    <AvInput type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleInputChange} className=\"form-control\" placeholder=\"Contraseña\" required/>\r\n                    <AvFeedback>Porfavor ingrese una contraseña.</AvFeedback>\r\n                </AvGroup>\r\n\r\n                <button type=\"submit\" className=\"btn btn-primary btn-block\">Iniciar Sesión</button>\r\n                <p className=\"forgot-password text-center\">\r\n                 <a href=\"/recover\">¿Olvidaste tu contraseña?</a>\r\n                </p>\r\n                <a type=\"button\" className=\"btn btn-light btn-block\" href=\"/sign-up\">Crear Cuenta Nueva</a>\r\n                \r\n                <hr></hr>\r\n\r\n                <div id=\"gSignInWrapper\">\r\n                    <div id=\"customBtn\" className=\"customGPlusSignIn\">\r\n                        <span className=\"icon\"></span>\r\n                        <span className=\"buttonText\">Iniciar Sesión con Google</span>\r\n                    </div>\r\n                </div>\r\n                <div id=\"name\"></div>\r\n                <script>startApp();</script>\r\n            </AvForm>\r\n        );\r\n    }\r\n}","C:\\Users\\ALEX CHUNG\\Desktop\\IHC\\Red Social Ayuda Emocional\\react-flask-app\\src\\components\\signup.component.js",["34"],"import React, { Component } from \"react\";\r\nimport { AvForm, AvGroup, AvInput, AvFeedback } from 'availity-reactstrap-validation';\r\n\r\nexport default class SignUp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          name: \"\",\r\n          lastname: \"\",\r\n          email:\"\",\r\n          password:\"\",\r\n          success:false,\r\n          message:\"\",\r\n          classStyle:\"\"\r\n        };\r\n    \r\n      }\r\n\r\n      handleInputChange = event => {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n    \r\n        this.setState({\r\n          [name]: value\r\n        });\r\n      }\r\n\r\n      handleSubmit = async event => {\r\n        event.preventDefault();\r\n        const new_user = {name:this.state.name, lastname:this.state.lastname, email:this.state.email, password:this.state.password};\r\n        const response = await fetch(\"/sign-up\",{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(new_user)\r\n        }).then(res => res.json())\r\n        .then(data => {\r\n            this.setState({\r\n                name: \"\",\r\n                lastname: \"\",\r\n                email:\"\",\r\n                password:\"\",\r\n            })\r\n            if(data){\r\n                this.setState({success:true,\r\n                                message:data.message,\r\n                                classStyle:data.classStyle})\r\n            }\r\n        })\r\n      }\r\n\r\n    render() {\r\n        return (\r\n            <AvForm onValidSubmit={this.handleSubmit}>\r\n                <h3>Registrarte</h3>\r\n\r\n                <AvGroup>\r\n                    <AvInput type=\"text\" name=\"name\" value={this.state.name} onChange={this.handleInputChange} className=\"form-control\" placeholder=\"Nombre\" required/>\r\n                    <AvFeedback>Ingrese su nombre.</AvFeedback>\r\n                </AvGroup>\r\n\r\n                <AvGroup>\r\n                    <AvInput type=\"text\" name=\"lastname\" value={this.state.lastname} onChange={this.handleInputChange} className=\"form-control\" placeholder=\"Apellidos\" required/>\r\n                    <AvFeedback>Ingrese sus apellidos.</AvFeedback>\r\n                </AvGroup>\r\n\r\n                <AvGroup>\r\n                    <AvInput type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleInputChange} className=\"form-control\" placeholder=\"Correo electrónico\" required/>\r\n                    <AvFeedback>Necesita un correo válido para registrarse.</AvFeedback>\r\n                </AvGroup>\r\n\r\n                <AvGroup>\r\n                    <AvInput type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleInputChange} minLength=\"6\" className=\"form-control\" placeholder=\"Ingrese una contraseña\" required/>\r\n                    <AvFeedback>La contraseña debe tener un mínimo de seis caracteres.</AvFeedback>               \r\n                </AvGroup>\r\n\r\n                <button type=\"submit\" className=\"btn btn-primary btn-block\">Registrarte</button>\r\n                <p className=\"forgot-password text-right\">\r\n                    Ya estoy registrado <a href=\"/\">¿iniciar sesión?</a>\r\n                </p>\r\n                {this.state.success && <div name=\"success\" className={this.state.classStyle} role=\"alert\">\r\n                    {this.state.message}\r\n                </div>}\r\n            </AvForm>\r\n        );\r\n    }\r\n}","C:\\Users\\ALEX CHUNG\\Desktop\\IHC\\Red Social Ayuda Emocional\\react-flask-app\\src\\components\\recover_password.component.js",["35"],"import React, { Component } from \"react\";\r\nimport { AvForm, AvGroup, AvInput, AvFeedback } from 'availity-reactstrap-validation';\r\n\r\nexport default class RecoverPassword extends Component {\r\n    constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n    };\r\n\r\n  }\r\n\r\n  handleInputChange = event => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n  \r\n  handleSubmit = async event => {\r\n    event.preventDefault();\r\n    const user = {email:this.state.email, password:this.state.password};\r\n    const response = await fetch(\"/recoverpassword\",{\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(user)\r\n    });\r\n  }\r\n\r\n  render() {\r\n        return (\r\n          <AvForm onValidSubmit={this.handleSubmit}>\r\n                <h3>Ingrese su correo electrónico para recuperar su contraseña</h3>\r\n               <AvGroup>\r\n                    <AvInput type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleInputChange} className=\"form-control\" placeholder=\"Correo electrónico\" required/>\r\n                    <AvFeedback>Se necesita ingresar una dirección de correo válida para recuperar su contraseña.</AvFeedback>\r\n                </AvGroup>\r\n                <button type=\"submit\" className=\"btn btn-primary btn-block\">Enviar</button>\r\n                <a type=\"button\" className=\"btn btn-light btn-block\" href=\"/\">Volver</a>\r\n            </AvForm>\r\n            \r\n        );\r\n    }\r\n}",{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":4,"column":50,"nodeType":"42","messageId":"43","endLine":4,"endColumn":54},{"ruleId":"40","severity":1,"message":"44","line":27,"column":11,"nodeType":"42","messageId":"43","endLine":27,"endColumn":19},{"ruleId":"40","severity":1,"message":"44","line":32,"column":15,"nodeType":"42","messageId":"43","endLine":32,"endColumn":23},{"ruleId":"40","severity":1,"message":"44","line":26,"column":11,"nodeType":"42","messageId":"43","endLine":26,"endColumn":19},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'response' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]